# Build stage
FROM node:18-alpine AS builder

WORKDIR /app

# Install nano and other build dependencies
RUN apk add --no-cache nano

# Install dependencies
COPY package*.json ./
RUN npm ci

# Copy source code
COPY . .

# Copy .env.example to .env and update variables
RUN if [ -f .env.example ]; then \
    cp .env.example .env && \
    echo "" > .env && \
    echo "NODE_ENV=production" >> .env && \
    echo "BACKEND_BASE_URL=http://threadly-backend.manjurulhoque.com" >> .env && \
    echo "NEXTAUTH_SECRET=secret123" >> .env && \
    echo "NEXTAUTH_URL=http://threadly.manjurulhoque.com" >> .env; \
fi

# Set production environment
ENV NEXT_TELEMETRY_DISABLED 1
ENV NODE_ENV production
# Disable ESLint during build
ENV DISABLE_ESLINT_PLUGIN true

# Build application
RUN npm run build

# Production stage
FROM node:18-alpine AS runner

WORKDIR /app

# Install nano for production environment
RUN apk add --no-cache nano

# Set production environment
ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1

# Copy necessary files from builder
COPY --from=builder /app/next.config.mjs ./
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static
COPY --from=builder /app/.env ./.env

# Set user for security
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs
RUN chown -R nextjs:nodejs /app
USER nextjs

# Expose port
EXPOSE 3001

# Start the application
CMD ["node", "server.js", "--port", "3001"] 